<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Patient Funding Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        /* Header */
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .header-left {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .header-icon {
            font-size: 2rem;
            color: #ffd700;
        }

        .header-title h1 {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .header-title p {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .search-new-btn {
            background: rgba(255,255,255,0.2);
            color: white;
            border: 1px solid rgba(255,255,255,0.3);
            padding: 10px 20px;
            border-radius: 25px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .search-new-btn:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-2px);
        }

        /* Main Container */
        .main-container {
            display: flex;
            min-height: calc(100vh - 100px);
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: white;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            padding: 20px 0;
        }

        .menu-item {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 15px 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            border-left: 4px solid transparent;
            color: #666;
        }

        .menu-item:hover {
            background: #f8f9fa;
            color: #667eea;
        }

        .menu-item.active {
            background: #e8f2ff;
            color: #667eea;
            border-left-color: #667eea;
            font-weight: 600;
        }

        .menu-item.hidden {
            display: none;
        }

        .menu-icon {
            font-size: 1.2rem;
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            padding: 30px;
            overflow-y: auto;
        }

        .content-header {
            margin-bottom: 30px;
        }

        .patient-info {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .patient-name {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 10px;
        }

        .patient-details {
            display: flex;
            flex-direction: column;
            gap: 25px;
        }

        .detail-section {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            border-left: 4px solid #667eea;
        }

        .detail-section h4 {
            color: #667eea;
            margin-bottom: 15px;
            font-size: 1.1rem;
            font-weight: 600;
        }

        .detail-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
        }

        .detail-item.full-width {
            grid-column: 1 / -1;
        }

        /* Emergency Contacts */
        .contact-card {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
        }

        .contact-header {
            color: #667eea;
            margin-bottom: 10px;
            font-size: 1rem;
        }

        .contact-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 10px;
        }

        .contact-item {
            display: flex;
            flex-direction: column;
        }

        .contact-label {
            font-size: 0.8rem;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 3px;
        }

        .contact-value {
            font-size: 0.9rem;
            color: #333;
            font-weight: 500;
        }

        /* Practitioner Styles */
        .practitioners-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .practitioner-card {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .practitioner-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 16px rgba(0,0,0,0.15);
        }

        .practitioner-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .practitioner-photo {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            overflow: hidden;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .practitioner-photo img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .practitioner-avatar {
            font-size: 1.5rem;
            color: white;
        }

        .practitioner-status {
            margin-top: 5px;
        }

        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }

        .practitioner-name {
            font-size: 1.2rem;
            font-weight: 600;
            color: #333;
            margin: 0 0 15px 0;
        }

        .practitioner-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 10px;
            margin-bottom: 20px;
        }

        .practitioner-contact,
        .practitioner-address,
        .practitioner-qualifications {
            margin-top: 15px;
        }

        .practitioner-contact h4,
        .practitioner-address h4,
        .practitioner-qualifications h4 {
            color: #667eea;
            font-size: 0.9rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 8px;
            border-bottom: 1px solid #e9ecef;
            padding-bottom: 5px;
        }

        .contact-item,
        .address-item,
        .qualification-item {
            margin-bottom: 8px;
            font-size: 0.9rem;
        }

        .contact-type {
            font-weight: 600;
            color: #666;
            margin-right: 5px;
        }

        .address-line {
            font-weight: 500;
            color: #333;
        }

        .address-city {
            color: #666;
            font-size: 0.85rem;
        }

        .address-country {
            color: #999;
            font-size: 0.8rem;
        }

        .qualification-code {
            font-weight: 500;
            color: #333;
        }

        .qualification-period {
            color: #666;
            font-size: 0.85rem;
            font-style: italic;
        }

        /* Organization Styles */
        .organizations-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .organization-card {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .organization-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 16px rgba(0,0,0,0.15);
        }

        .organization-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .organization-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
        }

        .organization-status {
            margin-top: 5px;
        }

        .organization-name {
            font-size: 1.2rem;
            font-weight: 600;
            color: #333;
            margin: 0 0 15px 0;
        }

        .organization-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 10px;
            margin-bottom: 20px;
        }

        .organization-contact,
        .organization-address,
        .organization-contacts {
            margin-top: 15px;
        }

        .organization-contact h4,
        .organization-address h4,
        .organization-contacts h4 {
            color: #28a745;
            font-size: 0.9rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 8px;
            border-bottom: 1px solid #e9ecef;
            padding-bottom: 5px;
        }

        .detail-item {
            display: flex;
            flex-direction: column;
        }

        .detail-label {
            font-size: 0.8rem;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 5px;
        }

        .detail-value {
            font-size: 1rem;
            color: #333;
            font-weight: 500;
        }

        /* Content Sections */
        .content-section {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            overflow: hidden;
        }

        .section-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .section-title {
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 1.2rem;
            font-weight: 600;
        }

        .refresh-btn {
            background: rgba(255,255,255,0.2);
            border: none;
            color: white;
            padding: 8px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .refresh-btn:hover {
            background: rgba(255,255,255,0.3);
            transform: rotate(180deg);
        }

        .section-content {
            padding: 20px;
        }

        /* Funding Summary Cards */
        .funding-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .funding-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .funding-amount {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .funding-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        /* Tables */
        .data-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }

        .data-table th,
        .data-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .data-table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #333;
        }

        .data-table tr:hover {
            background: #f8f9fa;
        }

        .view-btn {
            background: #667eea;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .view-btn:hover {
            background: #5a6fd8;
            transform: translateY(-2px);
        }

        /* Loading and Error States */
        .loading {
            text-align: center;
            padding: 40px;
            color: #666;
        }

        .error {
            background: #fee;
            color: #c33;
            padding: 15px;
            border-radius: 5px;
            margin: 10px 0;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .main-container {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                order: 2;
            }
            
            .main-content {
                order: 1;
            }
            
            .funding-grid {
                grid-template-columns: 1fr;
            }
        }

        /* EOB Detail Card Styles */
        .eob-detail-card {
            background: #f8f9fa;
            border: 1px solid #e1e8ed;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .eob-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #e1e8ed;
        }

        .eob-basic-info h3 {
            margin-bottom: 0.5rem;
            font-size: 1.1rem;
            color: #2c3e50;
        }

        .eob-status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .eob-actions {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        .submit-copay-btn {
            background: #667eea;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .submit-copay-btn:hover {
            background: #5a6fd8;
            transform: translateY(-1px);
        }

        .submit-copay-btn:disabled {
            background: #95a5a6;
            cursor: not-allowed;
            transform: none;
        }

        .submission-status {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-left: 1rem;
            font-size: 0.8rem;
            color: #555;
        }

        .status-indicator {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: #4CAF50;
            animation: pulse 2s infinite;
        }

        .status-indicator.error {
            background-color: #f44336;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        .eob-summary {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #e1e8ed;
        }

        .eob-summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 0.75rem;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem;
            background: white;
            border-radius: 6px;
            border: 1px solid #e1e8ed;
        }

        .summary-label {
            font-size: 0.8rem;
            color: #7f8c8d;
            font-weight: 600;
        }

        .summary-value {
            font-size: 1rem;
            font-weight: 500;
            color: #2c3e50;
        }

        .eob-line-items {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #e1e8ed;
        }

        .eob-line-items h4 {
            margin-bottom: 0.75rem;
            font-size: 1rem;
            color: #34495e;
        }

        .line-items-loading {
            text-align: center;
            padding: 1rem;
            color: #7f8c8d;
        }

        .eob-toggle {
            margin-top: 1rem;
            text-align: center;
        }

        .toggle-details-btn {
            background: #e1e8ed;
            color: #34495e;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .toggle-details-btn:hover {
            background: #d1d8dc;
            transform: translateY(-1px);
        }

        .toggle-text {
            font-weight: 600;
        }

        .toggle-icon {
            font-size: 0.8rem;
            transition: transform 0.3s ease;
        }

        .toggle-icon.open {
            transform: rotate(180deg);
        }

        /* Enhanced table styling for line items */
        .eob-line-items .data-table {
            margin-top: 1rem;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .eob-line-items .data-table th {
            background: #667eea;
            color: white;
            font-weight: 600;
            padding: 1rem 0.75rem;
        }

        .eob-line-items .data-table td {
            padding: 0.75rem;
            border-bottom: 1px solid #e1e8ed;
        }

        .eob-line-items .data-table tr:hover {
            background: #f8f9fa;
        }

        .eob-count {
            color: #6c757d;
            font-size: 0.9rem;
            margin-bottom: 1rem;
            font-style: italic;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <div class="header-left">
            <div class="header-icon">💰</div>
            <div class="header-title">
                <h1>Patient Funding Dashboard</h1>
                <p>Real-time patient funding and payment information</p>
            </div>
        </div>
        <a href="/patient-search" class="search-new-btn">
            🔍 Co-pay Assistant
        </a>
    </div>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Sidebar Navigation -->
        <div class="sidebar">
            <div class="menu-item active" onclick="showSection('patient')">
                <span class="menu-icon">👤</span>
                <span>Patient Information</span>
            </div>
            
            <% if (config.showFundingSummary) { %>
            <div class="menu-item" onclick="showSection('funding')">
                <span class="menu-icon">💰</span>
                <span>Funding Summary</span>
            </div>
            <% } %>
            
            <% if (config.showInsuranceCoverage) { %>
            <div class="menu-item" onclick="showSection('insurance')">
                <span class="menu-icon">🏥</span>
                <span>Insurance Coverage</span>
            </div>
            <% } %>
            
            <% if (config.showExplanationOfBenefits) { %>
            <div class="menu-item" onclick="showSection('eob')">
                <span class="menu-icon">📋</span>
                <span>Explanation of Benefits</span>
            </div>
            <% } %>
            
            <% if (config.showOrganization) { %>
            <div class="menu-item" onclick="showSection('organization')">
                <span class="menu-icon">🏢</span>
                <span>Organization</span>
            </div>
            <% } %>
            
            <% if (config.showPractitioner) { %>
            <div class="menu-item" onclick="showSection('practitioner')">
                <span class="menu-icon">👨‍⚕️</span>
                <span>Practitioner</span>
            </div>
            <% } %>
            
            <% if (config.showEncounter) { %>
            <div class="menu-item" onclick="showSection('encounter')">
                <span class="menu-icon">🏥</span>
                <span>Encounter</span>
            </div>
            <% } %>
            
            <% if (config.showClaims) { %>
            <div class="menu-item" onclick="showSection('claims')">
                <span class="menu-icon">📄</span>
                <span>Claims</span>
            </div>
            <% } %>
            
            <% if (config.showInvoices) { %>
            <div class="menu-item" onclick="showSection('invoices')">
                <span class="menu-icon">🧾</span>
                <span>Invoices</span>
            </div>
            <% } %>
            
            <% if (config.showAccounts) { %>
            <div class="menu-item" onclick="showSection('accounts')">
                <span class="menu-icon">💳</span>
                <span>Accounts</span>
            </div>
            <% } %>
        </div>

        <!-- Main Content Area -->
        <div class="main-content">
            <!-- Patient Information Section -->
            <div id="patient-section" class="content-section">
                <div class="section-header">
                    <div class="section-title">
                        <span>👤</span>
                        <span>Patient Information</span>
                    </div>
                </div>
                <div class="section-content">
                    <div class="patient-info">
                        <div class="patient-name">Currently viewing: <%= fundingData.patient.name %></div>
                        <div class="patient-details">
                            <!-- Basic Information -->
                            <div class="detail-section">
                                <h4>Basic Information</h4>
                                <div class="detail-grid">
                                    <div class="detail-item">
                                        <div class="detail-label">Name</div>
                                        <div class="detail-value"><%= fundingData.patient.name %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">MRN</div>
                                        <div class="detail-value"><%= fundingData.patient.mrn || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Date of Birth</div>
                                        <div class="detail-value"><%= fundingData.patient.birthDate || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Gender</div>
                                        <div class="detail-value"><%= fundingData.patient.gender || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Marital Status</div>
                                        <div class="detail-value"><%= fundingData.patient.maritalStatus || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Language</div>
                                        <div class="detail-value"><%= fundingData.patient.language || 'N/A' %></div>
                                    </div>
                                </div>
                            </div>

                            <!-- Contact Information -->
                            <div class="detail-section">
                                <h4>Contact Information</h4>
                                <div class="detail-grid">
                                    <div class="detail-item">
                                        <div class="detail-label">Phone</div>
                                        <div class="detail-value"><%= fundingData.patient.phone || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Email</div>
                                        <div class="detail-value"><%= fundingData.patient.email || 'N/A' %></div>
                                    </div>
                                </div>
                            </div>

                            <!-- Address Information -->
                            <% if (fundingData.patient.address) { %>
                            <div class="detail-section">
                                <h4>Address</h4>
                                <div class="detail-grid">
                                    <% if (fundingData.patient.address.line && fundingData.patient.address.line.length > 0) { %>
                                    <div class="detail-item full-width">
                                        <div class="detail-label">Street Address</div>
                                        <div class="detail-value"><%= fundingData.patient.address.line.join(', ') %></div>
                                    </div>
                                    <% } %>
                                    <div class="detail-item">
                                        <div class="detail-label">City</div>
                                        <div class="detail-value"><%= fundingData.patient.address.city || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">State</div>
                                        <div class="detail-value"><%= fundingData.patient.address.state || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Postal Code</div>
                                        <div class="detail-value"><%= fundingData.patient.address.postalCode || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Country</div>
                                        <div class="detail-value"><%= fundingData.patient.address.country || 'N/A' %></div>
                                    </div>
                                </div>
                            </div>
                            <% } %>

                            <!-- Demographics -->
                            <div class="detail-section">
                                <h4>Demographics</h4>
                                <div class="detail-grid">
                                    <div class="detail-item">
                                        <div class="detail-label">Ethnicity</div>
                                        <div class="detail-value"><%= fundingData.patient.ethnicity || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Race</div>
                                        <div class="detail-value"><%= fundingData.patient.race || 'N/A' %></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Multiple Birth</div>
                                        <div class="detail-value">
                                            <%= fundingData.patient.multipleBirth ? 'Yes' : 'No' %>
                                            <% if (fundingData.patient.multipleBirth && fundingData.patient.multipleBirthCount) { %>
                                                (Count: <%= fundingData.patient.multipleBirthCount %>)
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Deceased</div>
                                        <div class="detail-value">
                                            <%= fundingData.patient.deceased ? 'Yes' : 'No' %>
                                            <% if (fundingData.patient.deceased && fundingData.patient.deceasedDate) { %>
                                                (<%= fundingData.patient.deceasedDate %>)
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Emergency Contacts -->
                            <% if (fundingData.patient.contact && fundingData.patient.contact.length > 0) { %>
                            <div class="detail-section">
                                <h4>Emergency Contacts</h4>
                                <% fundingData.patient.contact.forEach(function(contact, index) { %>
                                <div class="contact-card">
                                    <div class="contact-header">
                                        <strong><%= contact.relationship || 'Contact' %> <%= index + 1 %></strong>
                                    </div>
                                    <div class="contact-details">
                                        <div class="contact-item">
                                            <span class="contact-label">Name:</span>
                                            <span class="contact-value"><%= contact.name || 'N/A' %></span>
                                        </div>
                                        <div class="contact-item">
                                            <span class="contact-label">Phone:</span>
                                            <span class="contact-value"><%= contact.phone || 'N/A' %></span>
                                        </div>
                                        <div class="contact-item">
                                            <span class="contact-label">Email:</span>
                                            <span class="contact-value"><%= contact.email || 'N/A' %></span>
                                        </div>
                                    </div>
                                </div>
                                <% }); %>
                            </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Funding Summary Section -->
            <% if (config.showFundingSummary) { %>
            <div id="funding-section" class="content-section" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <span>💰</span>
                        <span>Funding Summary</span>
                    </div>
                </div>
                <div class="section-content">
                    <div class="funding-grid">
                        <div class="funding-card">
                            <div class="funding-amount">$<%= fundingData.fundingSummary.totalBilled.toFixed(2) %></div>
                            <div class="funding-label">Total Billed</div>
                        </div>
                        <div class="funding-card">
                            <div class="funding-amount">$<%= fundingData.fundingSummary.totalCovered.toFixed(2) %></div>
                            <div class="funding-label">Insurance Covered</div>
                        </div>
                        <div class="funding-card">
                            <div class="funding-amount">$<%= fundingData.fundingSummary.totalPatientResponsibility.toFixed(2) %></div>
                            <div class="funding-label">Patient Responsibility</div>
                        </div>
                        <div class="funding-card">
                            <div class="funding-amount">$<%= fundingData.fundingSummary.totalCopay.toFixed(2) %></div>
                            <div class="funding-label">Copay</div>
                        </div>
                        <div class="funding-card">
                            <div class="funding-amount">$<%= fundingData.fundingSummary.totalDeductible.toFixed(2) %></div>
                            <div class="funding-label">Deductible</div>
                        </div>
                        <div class="funding-card">
                            <div class="funding-amount">$<%= fundingData.fundingSummary.remainingBalance.toFixed(2) %></div>
                            <div class="funding-label">Remaining Balance</div>
                        </div>
                    </div>
                </div>
            </div>
            <% } %>

            <!-- Insurance Coverage Section -->
            <% if (config.showInsuranceCoverage) { %>
            <div id="insurance-section" class="content-section" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <span>🏥</span>
                        <span>Insurance Coverage</span>
                    </div>
                    <button class="refresh-btn" onclick="refreshInsurance()">🔄</button>
                </div>
                <div class="section-content">
                    <div id="insurance-content">
                        <% if (fundingData.coverage && fundingData.coverage.length > 0) { %>
                            <table class="data-table"><thead><tr><th>Type</th><th>Status</th><th>Subscriber</th><th>Beneficiary</th><th>Period</th></tr></thead><tbody>
                            <% fundingData.coverage.forEach(coverage => { %>
                                    <tr>
                                        <td><%= coverage.type %></td>
                                        <td><%= coverage.status %></td>
                                        <td><%= coverage.subscriber %></td>
                                        <td><%= coverage.beneficiary %></td>
                                        <td><%= coverage.period.start %> - <%= coverage.period.end || 'Active' %></td>
                                    </tr>
                                    <% }); %>
                            </tbody></table>
                        <% } else { %>
                            <p>No insurance coverage information available.</p>
                        <% } %>
                    </div>
                </div>
            </div>
            <% } %>

            <!-- Explanation of Benefits Section -->
            <% if (config.showExplanationOfBenefits) { %>
            <div id="eob-section" class="content-section" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <span>📋</span>
                        <span>Explanation of Benefits (EOB)</span>
                    </div>
                    <button class="refresh-btn" onclick="refreshEOB()">🔄</button>
                </div>
                <div class="section-content">
                    <div id="eob-content">
                        <% if (fundingData.eobs && fundingData.eobs.length > 0) { %>
                            <p class="eob-count">Found <%= fundingData.eobs.length %> Explanation of Benefit(s)</p>
                            <% fundingData.eobs.forEach(function(eob, eobIndex) { %>
                                <div class="eob-detail-card" data-eob-id="<%= eob.id %>">
                                    <div class="eob-header">
                                        <div class="eob-basic-info">
                                            <h3>Claim ID: <%= eob.id %></h3>
                                            <div class="eob-status-badge <%= eob.status === 'active' ? 'status-active' : 'status-inactive' %>">
                                                <%= eob.status %>
                                            </div>
                                        </div>
                                        <div class="eob-actions">
                                            <button class="submit-copay-btn" onclick="submitForCopay('<%= eob.id %>')" data-eob-id="<%= eob.id %>">
                                                Submit for Copay
                                            </button>
                                            <div class="submission-status" id="status-<%= eob.id %>" style="display: none;">
                                                <span class="status-indicator"></span>
                                                <span class="status-text"></span>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="eob-summary">
                                        <div class="eob-summary-grid">
                                            <!-- First Row -->
                                            <div class="summary-item">
                                                <span class="summary-label">Type:</span>
                                                <span class="summary-value"><%= eob.type?.coding?.[0]?.display || eob.type?.text || eob.type || 'N/A' %></span>
                                            </div>
                                            <div class="summary-item">
                                                <span class="summary-label">Service Date:</span>
                                                <span class="summary-value"><%= eob.billablePeriod?.start || 'N/A' %></span>
                                            </div>
                                            <div class="summary-item">
                                                <span class="summary-label">Provider:</span>
                                                <span class="summary-value"><%= eob.provider || 'N/A' %></span>
                                            </div>
                                        </div>
                                        
                                        <!-- Second Row -->
                                        <div class="eob-summary-grid" style="margin-top: 0.75rem;">
                                            <div class="summary-item">
                                                <span class="summary-label">Total Amount:</span>
                                                <span class="summary-value">
                                                    $<%= helpers.calculateTotalAmount(eob).toFixed(2) %>
                                                </span>
                                            </div>
                                            <div class="summary-item">
                                                <span class="summary-label">Patient Responsibility:</span>
                                                <span class="summary-value">
                                                    $<%= helpers.calculatePatientResponsibility(eob).toFixed(2) %>
                                                </span>
                                            </div>
                                            <div class="summary-item">
                                                <span class="summary-label">Copay Status:</span>
                                                <span class="summary-value" id="copay-status-<%= eob.id %>">Not Submitted</span>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="eob-line-items" id="line-items-<%= eob.id %>" style="display: none;">
                                        <h4>Service Line Items</h4>
                                        <div class="line-items-loading">Loading line items...</div>
                                    </div>
                                    
                                    <div class="eob-toggle">
                                        <button class="toggle-details-btn" onclick="toggleEOBDetails('<%= eob.id %>')">
                                            <span class="toggle-text">Show Details</span>
                                            <span class="toggle-icon">▼</span>
                                        </button>
                                    </div>
                                </div>
                                    <% }); %>
                        <% } else { %>
                            <p>No Explanation of Benefits available.</p>
                        <% } %>
                    </div>
                </div>
            </div>
            <% } %>

                    <!-- Practitioner Section -->
        <% if (config.showPractitioner) { %>
        <!-- DEBUG: Practitioner section enabled, practitioners count: <%= fundingData.practitioners ? fundingData.practitioners.length : 'undefined' %> -->
        <div id="practitioner-section" class="content-section" style="display: none;">
            <div class="section-header">
                <div class="section-title">
                    <span>👨‍⚕️</span>
                    <span>Practitioners</span>
                </div>
                <div class="section-actions">
                    <button class="refresh-btn" onclick="refreshPractitioners()">
                        <span>🔄</span>
                    </button>
                </div>
            </div>
            <div class="section-content">
                <% if (fundingData.practitioners && fundingData.practitioners.length > 0) { %>
                    <div class="practitioners-grid">
                        <% fundingData.practitioners.forEach(function(practitioner, index) { %>
                        <div class="practitioner-card">
                            <div class="practitioner-header">
                                <div class="practitioner-photo">
                                    <% if (practitioner.photo && practitioner.photo[0] && practitioner.photo[0].url) { %>
                                        <img src="<%= practitioner.photo[0].url %>" alt="Practitioner Photo" />
                                    <% } else { %>
                                        <div class="practitioner-avatar">
                                            <span>👨‍⚕️</span>
                                        </div>
                                    <% } %>
                                </div>
                                <div class="practitioner-status">
                                    <span class="status-badge <%= practitioner.active ? 'status-active' : 'status-inactive' %>">
                                        <%= practitioner.active ? 'Active' : 'Inactive' %>
                                    </span>
                                </div>
                            </div>
                            <div class="practitioner-info">
                                <h3 class="practitioner-name">
                                    <%= practitioner.name?.text || `${practitioner.name?.given?.join(' ') || ''} ${practitioner.name?.family || ''}`.trim() || 'Unknown Name' %>
                                </h3>
                                <div class="practitioner-details">
                                    <% if (practitioner.identifier && practitioner.identifier.length > 0) { %>
                                    <div class="detail-item">
                                        <span class="detail-label">ID:</span>
                                        <span class="detail-value"><%= practitioner.identifier[0].value || 'N/A' %></span>
                                    </div>
                                    <% } %>
                                    <% if (practitioner.gender) { %>
                                    <div class="detail-item">
                                        <span class="detail-label">Gender:</span>
                                        <span class="detail-value"><%= practitioner.gender %></span>
                                    </div>
                                    <% } %>
                                    <% if (practitioner.birthDate) { %>
                                    <div class="detail-item">
                                        <span class="detail-label">Birth Date:</span>
                                        <span class="detail-value"><%= practitioner.birthDate %></span>
                                    </div>
                                    <% } %>
                                </div>
                                
                                <!-- Contact Information -->
                                <% if (practitioner.telecom && practitioner.telecom.length > 0) { %>
                                <div class="practitioner-contact">
                                    <h4>Contact Information</h4>
                                    <% practitioner.telecom.forEach(function(contact) { %>
                                    <div class="contact-item">
                                        <span class="contact-type"><%= contact.system || 'Unknown' %>:</span>
                                        <span class="contact-value"><%= contact.value || 'N/A' %></span>
                                    </div>
                                    <% }); %>
                                </div>
                                <% } %>
                                
                                <!-- Address Information -->
                                <% if (practitioner.address && practitioner.address.length > 0) { %>
                                <div class="practitioner-address">
                                    <h4>Address</h4>
                                    <% practitioner.address.forEach(function(address, addrIndex) { %>
                                    <div class="address-item">
                                        <% if (address.line && address.line.length > 0) { %>
                                            <div class="address-line"><%= address.line.join(', ') %></div>
                                        <% } %>
                                        <div class="address-city">
                                            <%= address.city || '' %> <%= address.state || '' %> <%= address.postalCode || '' %>
                                        </div>
                                        <% if (address.country) { %>
                                            <div class="address-country"><%= address.country %></div>
                                        <% } %>
                                    </div>
                                    <% }); %>
                                </div>
                                <% } %>
                                
                                <!-- Qualifications -->
                                <% if (practitioner.qualification && practitioner.qualification.length > 0) { %>
                                <div class="practitioner-qualifications">
                                    <h4>Qualifications</h4>
                                    <% practitioner.qualification.forEach(function(qual) { %>
                                    <div class="qualification-item">
                                        <div class="qualification-code">
                                            <%= qual.code?.coding?.[0]?.display || qual.code?.text || 'Unknown Qualification' %>
                                        </div>
                                        <% if (qual.period) { %>
                                        <div class="qualification-period">
                                            <%= qual.period.start || '' %> - <%= qual.period.end || 'Present' %>
                                        </div>
                                        <% } %>
                                    </div>
                                    <% }); %>
                                </div>
                                <% } %>
                            </div>
                        </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="no-data">
                        <p>No practitioners found for this patient.</p>
                    </div>
                <% } %>
            </div>
        </div>
        <% } %>

        <!-- Organization Section -->
        <% if (config.showOrganization) { %>
        <div id="organization-section" class="content-section" style="display: none;">
            <div class="section-header">
                <div class="section-title">
                    <span>🏢</span>
                    <span>Organizations</span>
                </div>
                <div class="section-actions">
                    <button class="refresh-btn" onclick="refreshOrganizations()">
                        <span>🔄</span>
                    </button>
                </div>
            </div>
            <div class="section-content">
                <% if (fundingData.organizations && fundingData.organizations.length > 0) { %>
                    <div class="organizations-grid">
                        <% fundingData.organizations.forEach(function(organization, index) { %>
                        <div class="organization-card">
                            <div class="organization-header">
                                <div class="organization-icon">
                                    <span>🏢</span>
                                </div>
                                <div class="organization-status">
                                    <span class="status-badge <%= organization.active ? 'status-active' : 'status-inactive' %>">
                                        <%= organization.active ? 'Active' : 'Inactive' %>
                                    </span>
                                </div>
                            </div>
                            <div class="organization-info">
                                <h3 class="organization-name">
                                    <%= organization.name || 'Unknown Organization' %>
                                </h3>
                                <div class="organization-details">
                                    <% if (organization.identifier && organization.identifier.length > 0) { %>
                                    <div class="detail-item">
                                        <span class="detail-label">ID:</span>
                                        <span class="detail-value"><%= organization.identifier[0].value || 'N/A' %></span>
                                    </div>
                                    <% } %>
                                    <% if (organization.type) { %>
                                    <div class="detail-item">
                                        <span class="detail-label">Type:</span>
                                        <span class="detail-value"><%= organization.type?.coding?.[0]?.display || organization.type?.text || 'N/A' %></span>
                                    </div>
                                    <% } %>
                                    <% if (organization.alias && organization.alias.length > 0) { %>
                                    <div class="detail-item">
                                        <span class="detail-label">Alias:</span>
                                        <span class="detail-value"><%= organization.alias.join(', ') %></span>
                                    </div>
                                    <% } %>
                                </div>
                                
                                <!-- Contact Information -->
                                <% if (organization.telecom && organization.telecom.length > 0) { %>
                                <div class="organization-contact">
                                    <h4>Contact Information</h4>
                                    <% organization.telecom.forEach(function(contact) { %>
                                    <div class="contact-item">
                                        <span class="contact-type"><%= contact.system || 'Unknown' %>:</span>
                                        <span class="contact-value"><%= contact.value || 'N/A' %></span>
                                    </div>
                                    <% }); %>
                                </div>
                                <% } %>
                                
                                <!-- Address Information -->
                                <% if (organization.address && organization.address.length > 0) { %>
                                <div class="organization-address">
                                    <h4>Address</h4>
                                    <% organization.address.forEach(function(address, addrIndex) { %>
                                    <div class="address-item">
                                        <% if (address.line && address.line.length > 0) { %>
                                            <div class="address-line"><%= address.line.join(', ') %></div>
                                        <% } %>
                                        <div class="address-city">
                                            <%= address.city || '' %> <%= address.state || '' %> <%= address.postalCode || '' %>
                                        </div>
                                        <% if (address.country) { %>
                                            <div class="address-country"><%= address.country %></div>
                                        <% } %>
                                    </div>
                                    <% }); %>
                                </div>
                                <% } %>
                                
                                <!-- Organization Contacts -->
                                <% if (organization.contact && organization.contact.length > 0) { %>
                                <div class="organization-contacts">
                                    <h4>Organization Contacts</h4>
                                    <% organization.contact.forEach(function(contact, contactIndex) { %>
                                    <div class="contact-card">
                                        <div class="contact-header">
                                            <strong><%= contact.purpose?.coding?.[0]?.display || 'Contact' %> <%= contactIndex + 1 %></strong>
                                        </div>
                                        <div class="contact-details">
                                            <% if (contact.name) { %>
                                            <div class="contact-item">
                                                <span class="contact-label">Name:</span>
                                                <span class="contact-value"><%= contact.name?.text || 'N/A' %></span>
                                            </div>
                                            <% } %>
                                            <% if (contact.telecom && contact.telecom.length > 0) { %>
                                            <% contact.telecom.forEach(function(telecom) { %>
                                            <div class="contact-item">
                                                <span class="contact-label"><%= telecom.system || 'Unknown' %>:</span>
                                                <span class="contact-value"><%= telecom.value || 'N/A' %></span>
                                            </div>
                                            <% }); %>
                                            <% } %>
                                        </div>
                                    </div>
                                    <% }); %>
                                </div>
                                <% } %>
                            </div>
                        </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="no-data">
                        <p>No organizations found for this patient.</p>
                    </div>
                <% } %>
            </div>
        </div>
        <% } %>

            <% if (config.showPractitioner) { %>
            <div id="practitioner-section" class="content-section" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <span>👨‍⚕️</span>
                        <span>Practitioner</span>
                    </div>
                </div>
                <div class="section-content">
                    <p>Practitioner information will be implemented in Phase 2.</p>
                </div>
            </div>
            <% } %>

            <% if (config.showEncounter) { %>
            <div id="encounter-section" class="content-section" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <span>🏥</span>
                        <span>Encounter</span>
                    </div>
                </div>
                <div class="section-content">
                    <p>Encounter information will be implemented in Phase 2.</p>
                </div>
            </div>
            <% } %>

            <% if (config.showClaims) { %>
            <div id="claims-section" class="content-section" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <span>📄</span>
                        <span>Claims</span>
                    </div>
                </div>
                <div class="section-content">
                    <p>Claims information will be implemented in Phase 1.</p>
                </div>
            </div>
            <% } %>

            <% if (config.showInvoices) { %>
            <div id="invoices-section" class="content-section" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <span>🧾</span>
                        <span>Invoices</span>
                    </div>
                </div>
                <div class="section-content">
                    <p>Invoice information will be implemented in Phase 1.</p>
                </div>
            </div>
            <% } %>

            <% if (config.showAccounts) { %>
            <div id="accounts-section" class="content-section" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <span>💳</span>
                        <span>Accounts</span>
                    </div>
                </div>
                <div class="section-content">
                    <p>Account information will be implemented in Phase 1.</p>
                </div>
            </div>
            <% } %>
        </div>
    </div>

    <!-- Enhanced EOB Modal -->
    <div id="eobModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">
                    <span class="icon">📋</span>
                    <span>Explanation of Benefits</span>
                </div>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                <div id="eobDetails" class="eob-details">
                    <div class="loading">Loading EOB details...</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Configuration object for feature flags
        const config = <%- JSON.stringify(config) %>;
        console.log('Config loaded:', config);
        console.log('showPractitioner:', config.showPractitioner);
        
        // Show section function
        function showSection(sectionName) {
            // Hide all sections
            const sections = document.querySelectorAll('.content-section');
            sections.forEach(section => {
                section.style.display = 'none';
            });
            
            // Show selected section
            const selectedSection = document.getElementById(sectionName + '-section');
            if (selectedSection) {
                selectedSection.style.display = 'block';
            }
            
            // Update menu active state
            const menuItems = document.querySelectorAll('.menu-item');
            menuItems.forEach(item => {
                item.classList.remove('active');
            });
            
            // Find and activate the clicked menu item
            const clickedItem = event.currentTarget;
            clickedItem.classList.add('active');
        }

        // Refresh functions
        function refreshInsurance() {
            const content = document.getElementById('insurance-content');
            content.innerHTML = '<div class="loading">Refreshing insurance data...</div>';
            
            fetch('/funding/api/insurance')
                .then(response => response.json())
                .then(data => {
                    // Update insurance content
                    if (data.coverage && data.coverage.length > 0) {
                        let html = '<table class="data-table"><thead><tr><th>Type</th><th>Status</th><th>Subscriber</th><th>Beneficiary</th><th>Period</th></tr></thead><tbody>';
                        data.coverage.forEach(coverage => {
                            html += `<tr><td>${coverage.type}</td><td>${coverage.status}</td><td>${coverage.subscriber}</td><td>${coverage.beneficiary}</td><td>${coverage.period.start} - ${coverage.period.end || 'Active'}</td></tr>`;
                        });
                        html += '</tbody></table>';
                        content.innerHTML = html;
                    } else {
                        content.innerHTML = '<p>No insurance coverage information available.</p>';
                    }
                })
                .catch(error => {
                    content.innerHTML = '<div class="error">Error refreshing insurance data: ' + error.message + '</div>';
                });
        }

        function refreshEOB() {
            const content = document.getElementById('eob-content');
            content.innerHTML = '<div class="loading">Refreshing EOB data...</div>';
            
            fetch('/funding/api/eob')
                .then(response => response.json())
                .then(data => {
                    // Update EOB content with new card-based interface
                    if (data.eobs && data.eobs.length > 0) {
                        let html = `<p class="eob-count">Found ${data.eobs.length} Explanation of Benefit(s)</p>`;
                        data.eobs.forEach(eob => {
                            html += `
                                <div class="eob-detail-card" data-eob-id="${eob.id}">
                                    <div class="eob-header">
                                        <div class="eob-basic-info">
                                            <h3>Claim ID: ${eob.id}</h3>
                                            <div class="eob-status-badge ${eob.status === 'active' ? 'status-active' : 'status-inactive'}">
                                                ${eob.status}
                                            </div>
                                        </div>
                                        <div class="eob-actions">
                                            <button class="submit-copay-btn" onclick="submitForCopay('${eob.id}')" data-eob-id="${eob.id}">
                                                Submit for Copay
                                            </button>
                                            <div class="submission-status" id="status-${eob.id}" style="display: none;">
                                                <span class="status-indicator"></span>
                                                <span class="status-text"></span>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="eob-summary">
                                        <div class="eob-summary-grid">
                                            <!-- First Row -->
                                            <div class="summary-item">
                                                <span class="summary-label">Type:</span>
                                                <span class="summary-value">${eob.type?.coding?.[0]?.display || eob.type?.text || eob.type || 'N/A'}</span>
                                            </div>
                                            <div class="summary-item">
                                                <span class="summary-label">Service Date:</span>
                                                <span class="summary-value">${eob.billablePeriod?.start || 'N/A'}</span>
                                            </div>
                                            <div class="summary-item">
                                                <span class="summary-label">Provider:</span>
                                                <span class="summary-value">${eob.provider || 'N/A'}</span>
                                            </div>
                                        </div>
                                        
                                        <!-- Second Row -->
                                        <div class="eob-summary-grid" style="margin-top: 0.75rem;">
                                            <div class="summary-item">
                                                <span class="summary-label">Total Amount:</span>
                                                <span class="summary-value">
                                                    $${calculateTotalAmount(eob).toFixed(2)}
                                                </span>
                                            </div>
                                            <div class="summary-item">
                                                <span class="summary-label">Patient Responsibility:</span>
                                                <span class="summary-value">
                                                    $${calculatePatientResponsibility(eob).toFixed(2)}
                                                </span>
                                            </div>
                                            <div class="summary-item">
                                                <span class="summary-label">Copay Status:</span>
                                                <span class="summary-value" id="copay-status-${eob.id}">Not Submitted</span>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="eob-line-items" id="line-items-${eob.id}" style="display: none;">
                                        <h4>Service Line Items</h4>
                                        <div class="line-items-loading">Loading line items...</div>
                                    </div>
                                    
                                    <div class="eob-toggle">
                                        <button class="toggle-details-btn" onclick="toggleEOBDetails('${eob.id}')">
                                            <span class="toggle-text">Show Details</span>
                                            <span class="toggle-icon">▼</span>
                                        </button>
                                    </div>
                                </div>
                            `;
                        });
                        content.innerHTML = html;
                    } else {
                        content.innerHTML = '<p>No Explanation of Benefits available.</p>';
                    }
                })
                .catch(error => {
                    content.innerHTML = '<div class="error">Error refreshing EOB data: ' + error.message + '</div>';
                });
        }

        // New EOB functions for card-based interface
        function toggleEOBDetails(eobId) {
            const lineItemsDiv = document.getElementById(`line-items-${eobId}`);
            const toggleBtn = document.querySelector(`.eob-detail-card[data-eob-id="${eobId}"] .toggle-details-btn`);
            const toggleIcon = toggleBtn.querySelector('.toggle-icon');

            if (lineItemsDiv.style.display === 'none') {
                lineItemsDiv.style.display = 'block';
                toggleIcon.textContent = '▲';
                toggleIcon.classList.add('open');
                // Fetch and display line items
                fetchLineItems(eobId);
            } else {
                lineItemsDiv.style.display = 'none';
                toggleIcon.textContent = '▼';
                toggleIcon.classList.remove('open');
            }
        }

        // Helper to coerce number, string, or FHIR Money into a number
        function toNumericAmount(input) {
            if (input == null) return 0;
            if (typeof input === 'number') return isFinite(input) ? input : 0;
            if (typeof input === 'string') {
                const parsed = parseFloat(input.replace(/[^0-9.-]/g, ''));
                return isNaN(parsed) ? 0 : parsed;
            }
            if (typeof input === 'object') {
                if (Object.prototype.hasOwnProperty.call(input, 'value')) {
                    return toNumericAmount(input.value);
                }
            }
            return 0;
        }

        // Helper function to calculate total amount
        function calculateTotalAmount(eob) {
            if (eob && Array.isArray(eob.total) && eob.total.length > 0) {
                const submittedTotal = eob.total.find(total => {
                    const categoryText = getTextFromFHIR(total.category);
                    return categoryText.toLowerCase().includes('submitted') || 
                           categoryText.toLowerCase().includes('billed') ||
                           categoryText.toLowerCase().includes('charge');
                });
                if (submittedTotal) {
                    return toNumericAmount(submittedTotal.amount);
                }
                // Fallback to sum of all totals if no submitted total found
                return eob.total.reduce((sum, total) => {
                    return sum + toNumericAmount(total.amount);
                }, 0);
            }
            return 0;
        }

        // Helper function to calculate patient responsibility
        function calculatePatientResponsibility(eob) {
            if (eob && Array.isArray(eob.total) && eob.total.length > 0) {
                const patientTotal = eob.total.find(total => {
                    const categoryText = getTextFromFHIR(total.category);
                    return categoryText.toLowerCase().includes('patient') || 
                           categoryText.toLowerCase().includes('responsibility') ||
                           categoryText.toLowerCase().includes('copay') ||
                           categoryText.toLowerCase().includes('deductible');
                });
                if (patientTotal) {
                    return toNumericAmount(patientTotal.amount);
                }
            }
            return 0;
        }

        // Helper function to extract text from FHIR objects
        function getTextFromFHIR(obj) {
            if (!obj) return 'N/A';
            if (typeof obj === 'string') return obj;
            if (obj.text) return obj.text;
            if (obj.display) return obj.display;
            if (obj.value) return obj.value;
            if (obj.coding && obj.coding.length > 0) {
                return obj.coding[0].display || obj.coding[0].code || 'N/A';
            }
            return 'N/A';
        }

        async function fetchLineItems(eobId) {
            const lineItemsDiv = document.getElementById(`line-items-${eobId}`);
            const loadingDiv = lineItemsDiv.querySelector('.line-items-loading');
            loadingDiv.textContent = 'Loading line items...';

            try {
                const response = await fetch(`/funding/api/eob/${eobId}/line-items`);
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                const data = await response.json();
                displayLineItems(data, eobId);
            } catch (error) {
                console.error('Error fetching line items:', error);
                loadingDiv.textContent = 'Error loading line items.';
            }
        }

        function displayLineItems(lineItems, eobId) {
            const lineItemsDiv = document.getElementById(`line-items-${eobId}`);
            let html = `
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>Service</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Billed</th>
                            <th>Patient Responsibility</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            lineItems.forEach(item => {
                const billedAmount = item.net?.value || 0;
                const patientResponsibility = item.patientResponsibility || 0;
                
                html += `
                    <tr>
                        <td>${item.service || 'N/A'}</td>
                        <td>${item.startDate || 'N/A'}</td>
                        <td>${item.endDate || 'N/A'}</td>
                        <td>$${billedAmount.toFixed(2)}</td>
                        <td>$${patientResponsibility.toFixed(2)}</td>
                    </tr>
                `;
            });
            
            html += `
                    </tbody>
                </table>
            `;
            lineItemsDiv.innerHTML = html;
        }

        function submitForCopay(eobId) {
            const statusDiv = document.getElementById(`status-${eobId}`);
            const statusIndicator = statusDiv.querySelector('.status-indicator');
            const statusText = statusDiv.querySelector('.status-text');
            const submitBtn = document.querySelector(`.eob-detail-card[data-eob-id="${eobId}"] .submit-copay-btn`);
            const copayStatusSpan = document.getElementById(`copay-status-${eobId}`);

            statusDiv.style.display = 'block';
            statusIndicator.style.backgroundColor = '#4CAF50';
            statusText.textContent = 'Submitting...';
            submitBtn.disabled = true;
            copayStatusSpan.textContent = 'Submitting...';
            copayStatusSpan.style.color = '#ff9800';

            fetch(`/funding/api/eob/${eobId}/submit-for-copay`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Submission successful:', data);
                statusIndicator.style.backgroundColor = '#4CAF50';
                statusText.textContent = 'Submission successful!';
                statusText.style.color = '#155724';
                submitBtn.disabled = false;
                copayStatusSpan.textContent = 'Submitted - In Progress';
                copayStatusSpan.style.color = '#4CAF50';
                
                // Start monitoring status progression
                monitorCopayStatus(eobId);
            })
            .catch(error => {
                console.error('Submission failed:', error);
                statusIndicator.style.backgroundColor = '#f44336';
                statusText.textContent = 'Submission failed: ' + error.message;
                statusText.style.color = '#721c24';
                submitBtn.disabled = false;
                copayStatusSpan.textContent = 'Submission Failed';
                copayStatusSpan.style.color = '#f44336';
            });
        }

        // Function to monitor copay status progression
        function monitorCopayStatus(eobId) {
            const copayStatusSpan = document.getElementById(`copay-status-${eobId}`);
            
            // Update status every 30 seconds to simulate progression
            const statusInterval = setInterval(async () => {
                try {
                    const response = await fetch(`/funding/api/eob/${eobId}/submission-status`);
                    if (response.ok) {
                        const data = await response.json();
                        const status = data.status;
                        
                        // Update status display
                        switch(status) {
                            case 'claim_in_progress':
                                copayStatusSpan.textContent = 'In Progress';
                                copayStatusSpan.style.color = '#ff9800';
                                break;
                            case 'claim_under_review':
                                copayStatusSpan.textContent = 'Under Review';
                                copayStatusSpan.style.color = '#2196F3';
                                break;
                            case 'claim_approved':
                                copayStatusSpan.textContent = 'Approved';
                                copayStatusSpan.style.color = '#4CAF50';
                                break;
                            case 'claim_rejected':
                                copayStatusSpan.textContent = 'Rejected';
                                copayStatusSpan.style.color = '#f44336';
                                clearInterval(statusInterval);
                                break;
                            case 'claim_paid':
                                copayStatusSpan.textContent = 'Paid';
                                copayStatusSpan.style.color = '#4CAF50';
                                clearInterval(statusInterval);
                                break;
                            case 'claim_denied':
                                copayStatusSpan.textContent = 'Denied';
                                copayStatusSpan.style.color = '#f44336';
                                clearInterval(statusInterval);
                                break;
                            default:
                                copayStatusSpan.textContent = 'Processing';
                                copayStatusSpan.style.color = '#ff9800';
                        }
                    }
                } catch (error) {
                    console.error('Error checking status:', error);
                }
            }, 30000); // Check every 30 seconds
        }

        function refreshPractitioners() {
            const practitionerSection = document.getElementById('practitioner-section');
            practitionerSection.innerHTML = '<div class="loading">Refreshing practitioner data...</div>';
            
            fetch('/funding/api/practitioners')
                .then(response => response.json())
                .then(data => {
                    // Re-render practitioner section
                    if (data && data.length > 0) {
                        practitionerSection.innerHTML = `
                            <div class="section-header">
                                <div class="section-title">
                                    <span>👨‍⚕️</span>
                                    <span>Practitioners</span>
                                </div>
                                <div class="section-actions">
                                    <button class="refresh-btn" onclick="refreshPractitioners()">
                                        <span>🔄</span>
                                    </button>
                                </div>
                            </div>
                            <div class="section-content">
                                <div class="practitioners-grid">
                                    ${data.map(practitioner => `
                                        <div class="practitioner-card">
                                            <div class="practitioner-header">
                                                <div class="practitioner-photo">
                                                    ${practitioner.photo && practitioner.photo[0] && practitioner.photo[0].url ? 
                                                        `<img src="${practitioner.photo[0].url}" alt="Practitioner Photo" />` :
                                                        `<div class="practitioner-avatar"><span>👨‍⚕️</span></div>`
                                                    }
                                                </div>
                                                <div class="practitioner-status">
                                                    <span class="status-badge ${practitioner.active ? 'status-active' : 'status-inactive'}">
                                                        ${practitioner.active ? 'Active' : 'Inactive'}
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="practitioner-info">
                                                <h3 class="practitioner-name">
                                                    ${practitioner.name?.text || `${practitioner.name?.given?.join(' ') || ''} ${practitioner.name?.family || ''}`.trim() || 'Unknown Name'}
                                                </h3>
                                                <div class="practitioner-details">
                                                    ${practitioner.identifier && practitioner.identifier.length > 0 ? `
                                                        <div class="detail-item">
                                                            <span class="detail-label">ID:</span>
                                                            <span class="detail-value">${practitioner.identifier[0].value || 'N/A'}</span>
                                                        </div>
                                                    ` : ''}
                                                    ${practitioner.gender ? `
                                                        <div class="detail-item">
                                                            <span class="detail-label">Gender:</span>
                                                            <span class="detail-value">${practitioner.gender}</span>
                                                        </div>
                                                    ` : ''}
                                                    ${practitioner.birthDate ? `
                                                        <div class="detail-item">
                                                            <span class="detail-label">Birth Date:</span>
                                                            <span class="detail-value">${practitioner.birthDate}</span>
                                                        </div>
                                                    ` : ''}
                                                </div>
                                                
                                                ${practitioner.telecom && practitioner.telecom.length > 0 ? `
                                                    <div class="practitioner-contact">
                                                        <h4>Contact Information</h4>
                                                        ${practitioner.telecom.map(contact => `
                                                            <div class="contact-item">
                                                                <span class="contact-type">${contact.system || 'Unknown'}:</span>
                                                                <span class="contact-value">${contact.value || 'N/A'}</span>
                                                            </div>
                                                        `).join('')}
                                                    </div>
                                                ` : ''}
                                                
                                                ${practitioner.address && practitioner.address.length > 0 ? `
                                                    <div class="practitioner-address">
                                                        <h4>Address</h4>
                                                        ${practitioner.address.map(address => `
                                                            <div class="address-item">
                                                                ${address.line && address.line.length > 0 ? 
                                                                    `<div class="address-line">${address.line.join(', ')}</div>` : ''
                                                                }
                                                                <div class="address-city">
                                                                    ${address.city || ''} ${address.state || ''} ${address.postalCode || ''}
                                                                </div>
                                                                ${address.country ? `<div class="address-country">${address.country}</div>` : ''}
                                                            </div>
                                                        `).join('')}
                                                    </div>
                                                ` : ''}
                                                
                                                ${practitioner.qualification && practitioner.qualification.length > 0 ? `
                                                    <div class="practitioner-qualifications">
                                                        <h4>Qualifications</h4>
                                                        ${practitioner.qualification.map(qual => `
                                                            <div class="qualification-item">
                                                                <div class="qualification-code">
                                                                    ${qual.code?.coding?.[0]?.display || qual.code?.text || 'Unknown Qualification'}
                                                                </div>
                                                                ${qual.period ? `
                                                                    <div class="qualification-period">
                                                                        ${qual.period.start || ''} - ${qual.period.end || 'Present'}
                                                                    </div>
                                                                ` : ''}
                                                            </div>
                                                        `).join('')}
                                                    </div>
                                                ` : ''}
                                            </div>
                                        </div>
                                    `).join('')}
                                </div>
                            </div>
                        `;
                    } else {
                        practitionerSection.innerHTML = `
                            <div class="section-header">
                                <div class="section-title">
                                    <span>👨‍⚕️</span>
                                    <span>Practitioners</span>
                                </div>
                                <div class="section-actions">
                                    <button class="refresh-btn" onclick="refreshPractitioners()">
                                        <span>🔄</span>
                                    </button>
                                </div>
                            </div>
                            <div class="section-content">
                                <div class="no-data">
                                    <p>No practitioners found for this patient.</p>
                                </div>
                            </div>
                        `;
                    }
                })
                .catch(error => {
                    console.error('Error refreshing practitioners:', error);
                    const practitionerSection = document.getElementById('practitioner-section');
                    practitionerSection.innerHTML = '<div class="error">Error refreshing practitioner data</div>';
                });
        }

        function refreshOrganizations() {
            const organizationSection = document.getElementById('organization-section');
            organizationSection.innerHTML = '<div class="loading">Refreshing organization data...</div>';
            
            fetch('/funding/api/organizations')
                .then(response => response.json())
                .then(data => {
                    // Re-render organization section
                    if (data && data.length > 0) {
                        organizationSection.innerHTML = `
                            <div class="section-header">
                                <div class="section-title">
                                    <span>🏢</span>
                                    <span>Organizations</span>
                                </div>
                                <div class="section-actions">
                                    <button class="refresh-btn" onclick="refreshOrganizations()">
                                        <span>🔄</span>
                                    </button>
                                </div>
                            </div>
                            <div class="section-content">
                                <div class="organizations-grid">
                                    ${data.map(organization => `
                                        <div class="organization-card">
                                            <div class="organization-header">
                                                <div class="organization-icon">
                                                    <span>🏢</span>
                                                </div>
                                                <div class="organization-status">
                                                    <span class="status-badge ${organization.active ? 'status-active' : 'status-inactive'}">
                                                        ${organization.active ? 'Active' : 'Inactive'}
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="organization-info">
                                                <h3 class="organization-name">
                                                    ${organization.name || 'Unknown Organization'}
                                                </h3>
                                                <div class="organization-details">
                                                    ${organization.identifier && organization.identifier.length > 0 ? `
                                                        <div class="detail-item">
                                                            <span class="detail-label">ID:</span>
                                                            <span class="detail-value">${organization.identifier[0].value || 'N/A'}</span>
                                                        </div>
                                                    ` : ''}
                                                    ${organization.type ? `
                                                        <div class="detail-item">
                                                            <span class="detail-label">Type:</span>
                                                            <span class="detail-value">${organization.type?.coding?.[0]?.display || organization.type?.text || 'N/A'}</span>
                                                        </div>
                                                    ` : ''}
                                                    ${organization.alias && organization.alias.length > 0 ? `
                                                        <div class="detail-item">
                                                            <span class="detail-label">Alias:</span>
                                                            <span class="detail-value">${organization.alias.join(', ')}</span>
                                                        </div>
                                                    ` : ''}
                                                </div>
                                                
                                                ${organization.telecom && organization.telecom.length > 0 ? `
                                                    <div class="organization-contact">
                                                        <h4>Contact Information</h4>
                                                        ${organization.telecom.map(contact => `
                                                            <div class="contact-item">
                                                                <span class="contact-type">${contact.system || 'Unknown'}:</span>
                                                                <span class="contact-value">${contact.value || 'N/A'}</span>
                                                            </div>
                                                        `).join('')}
                                                    </div>
                                                ` : ''}
                                                
                                                ${organization.address && organization.address.length > 0 ? `
                                                    <div class="organization-address">
                                                        <h4>Address</h4>
                                                        ${organization.address.map(address => `
                                                            <div class="address-item">
                                                                ${address.line && address.line.length > 0 ? 
                                                                    `<div class="address-line">${address.line.join(', ')}</div>` : ''
                                                                }
                                                                <div class="address-city">
                                                                    ${address.city || ''} ${address.state || ''} ${address.postalCode || ''}
                                                                </div>
                                                                ${address.country ? `<div class="address-country">${address.country}</div>` : ''}
                                                            </div>
                                                        `).join('')}
                                                    </div>
                                                ` : ''}
                                                
                                                ${organization.contact && organization.contact.length > 0 ? `
                                                    <div class="organization-contacts">
                                                        <h4>Organization Contacts</h4>
                                                        ${organization.contact.map((contact, contactIndex) => `
                                                            <div class="contact-card">
                                                                <div class="contact-header">
                                                                    <strong>${contact.purpose?.coding?.[0]?.display || 'Contact'} ${contactIndex + 1}</strong>
                                                                </div>
                                                                <div class="contact-details">
                                                                    ${contact.name ? `
                                                                        <div class="contact-item">
                                                                            <span class="contact-label">Name:</span>
                                                                            <span class="contact-value">${contact.name?.text || 'N/A'}</span>
                                                                        </div>
                                                                    ` : ''}
                                                                    ${contact.telecom && contact.telecom.length > 0 ? 
                                                                        contact.telecom.map(telecom => `
                                                                            <div class="contact-item">
                                                                                <span class="contact-label">${telecom.system || 'Unknown'}:</span>
                                                                                <span class="contact-value">${telecom.value || 'N/A'}</span>
                                                                            </div>
                                                                        `).join('') : ''
                                                                    }
                                                                </div>
                                                            </div>
                                                        `).join('')}
                                                    </div>
                                                ` : ''}
                                            </div>
                                        </div>
                                    `).join('')}
                                </div>
                            </div>
                        `;
                    } else {
                        organizationSection.innerHTML = `
                            <div class="section-header">
                                <div class="section-title">
                                    <span>🏢</span>
                                    <span>Organizations</span>
                                </div>
                                <div class="section-actions">
                                    <button class="refresh-btn" onclick="refreshOrganizations()">
                                        <span>🔄</span>
                                    </button>
                                </div>
                            </div>
                            <div class="section-content">
                                <div class="no-data">
                                    <p>No organizations found for this patient.</p>
                                </div>
                            </div>
                        `;
                    }
                })
                .catch(error => {
                    console.error('Error refreshing organizations:', error);
                    const organizationSection = document.getElementById('organization-section');
                    organizationSection.innerHTML = '<div class="error">Error refreshing organization data</div>';
                });
        }

        // EOB Modal functions (from original funding.ejs)
        function viewEOB(eobId) {
            const modal = document.getElementById('eobModal');
            const detailsDiv = document.getElementById('eobDetails');
            
            modal.style.display = 'block';
            detailsDiv.innerHTML = '<div class="loading">Loading EOB details...</div>';
            
            fetch(`/funding/eob/${eobId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('EOB Data received:', data);
                    currentEOB = data; // Set current EOB for download function
                    displayEOBDetails(data);
                })
                .catch(error => {
                    console.error('Error loading EOB:', error);
                    detailsDiv.innerHTML = '<div class="error">Error loading EOB details: ' + error.message + '</div>';
                });
        }

        function closeModal() {
            const modal = document.getElementById('eobModal');
            modal.style.display = 'none';
        }

        function displayEOBDetails(eob) {
            const detailsDiv = document.getElementById('eobDetails');
            console.log('Displaying EOB details:', eob);
            console.log('EOB items:', eob.item);
            if (eob.item && eob.item.length > 0) {
                console.log('First item details:', eob.item[0]);
                console.log('First item adjudication:', eob.item[0].adjudication);
            }
            
            try {
            
            // Helper function to safely extract text from FHIR objects
            function getTextFromFHIR(obj) {
                if (!obj) return 'N/A';
                if (typeof obj === 'string') return obj;
                if (obj.text) return obj.text;
                if (obj.display) return obj.display;
                if (obj.value) return obj.value;
                if (obj.coding && obj.coding.length > 0) {
                    return obj.coding[0].display || obj.coding[0].code || 'N/A';
                }
                return 'N/A';
            }
            
            // Calculate totals
            let totalBilled = 0;
            let totalCovered = 0;
            let totalPatientResponsibility = 0;
            let totalCopay = 0;
            
            // Check if there's a total field at the EOB level
            if (eob.total && eob.total.length > 0) {
                console.log('EOB totals:', eob.total);
                eob.total.forEach(total => {
                    const category = getTextFromFHIR(total.category);
                    const amount = parseFloat(total.amount?.value || total.amount || 0) || 0;
                    console.log(`Total category: ${category}, amount: ${amount}`);
                    
                    if (category.toLowerCase().includes('submitted') || category.toLowerCase().includes('billed')) {
                        totalBilled = amount;
                    }
                });
            }
            
            if (eob.item && eob.item.length > 0) {
                eob.item.forEach(item => {
                    // Try different fields for billed amount in order of preference
                    // In FHIR EOB, the billed amount is typically in item.adjudication with category "submitted"
                    let billedAmount = 0;
                    
                    if (item.adjudication && item.adjudication.length > 0) {
                        const submittedAdj = item.adjudication.find(adj => {
                            const category = getTextFromFHIR(adj.category);
                            return category.toLowerCase().includes('submitted') || category.toLowerCase().includes('billed');
                        });
                        if (submittedAdj) {
                            billedAmount = parseFloat(submittedAdj.amount?.value || submittedAdj.amount || 0) || 0;
                        }
                    }
                    
                    // Fallback to other fields if no submitted adjudication found
                    if (billedAmount === 0) {
                        billedAmount = parseFloat(item.net || item.unitPrice?.value || item.factor || 0) || 0;
                    }
                    
                    totalBilled += billedAmount;
                    
                    if (item.adjudication && item.adjudication.length > 0) {
                        const coveredAmount = item.adjudication.reduce((sum, adj) => {
                            const categoryText = getTextFromFHIR(adj.category);
                            if (categoryText.toLowerCase().includes('benefit')) {
                                return sum + (parseFloat(adj.amount?.value || adj.amount || 0) || 0);
                            }
                            return sum;
                        }, 0);
                        
                        const patientResponsibility = item.adjudication.reduce((sum, adj) => {
                            const categoryText = getTextFromFHIR(adj.category);
                            if (categoryText.toLowerCase().includes('patient') || 
                                categoryText.toLowerCase().includes('responsibility') ||
                                categoryText.toLowerCase().includes('deductible')) {
                                return sum + (parseFloat(adj.amount?.value || adj.amount || 0) || 0);
                            }
                            return sum;
                        }, 0);
                        
                        const copayAmount = item.adjudication.reduce((sum, adj) => {
                            const categoryText = getTextFromFHIR(adj.category);
                            if (categoryText.toLowerCase().includes('copay')) {
                                return sum + (parseFloat(adj.amount?.value || adj.amount || 0) || 0);
                            }
                            return sum;
                        }, 0);
                        
                        totalCovered += coveredAmount;
                        totalPatientResponsibility += patientResponsibility;
                        totalCopay += copayAmount;
                    }
                });
            }
            
            // Fallback calculation
            if (totalPatientResponsibility === 0 && totalBilled > 0) {
                totalPatientResponsibility = totalBilled - totalCovered;
            }
            
            const html = `
                <!-- EOB Summary Section -->
                <div class="eob-summary">
                    <div class="eob-summary-grid">
                        <div class="eob-summary-item">
                            <div class="eob-summary-label">Claim ID</div>
                            <div class="eob-summary-value">${eob.id || 'N/A'}</div>
                        </div>
                        <div class="eob-summary-item">
                            <div class="eob-summary-label">Status</div>
                            <div class="eob-summary-value">
                                <span class="status-badge status-${eob.status || 'unknown'}">${eob.status || 'N/A'}</span>
                            </div>
                        </div>
                        <div class="eob-summary-item">
                            <div class="eob-summary-label">Type</div>
                            <div class="eob-summary-value">${eob.type?.coding?.[0]?.display || getTextFromFHIR(eob.type)}</div>
                        </div>
                        <div class="eob-summary-item">
                            <div class="eob-summary-label">Created</div>
                            <div class="eob-summary-value">${eob.created || 'N/A'}</div>
                        </div>
                        <div class="eob-summary-item">
                            <div class="eob-summary-label">Insurer</div>
                            <div class="eob-summary-value">${getTextFromFHIR(eob.insurer) || 'N/A'}</div>
                        </div>
                        <div class="eob-summary-item">
                            <div class="eob-summary-label">Provider</div>
                            <div class="eob-summary-value">${getTextFromFHIR(eob.provider) || 'N/A'}</div>
                        </div>
                    </div>
                </div>
                
                <div class="eob-sections">
                    <!-- Financial Summary Section -->
                    <div class="eob-section">
                        <div class="eob-section-header">
                            <span>💰</span>
                            <span>Financial Summary</span>
                        </div>
                        <div class="eob-section-content">
                            <div class="eob-summary-grid">
                                <div class="eob-summary-item">
                                    <div class="eob-summary-label">Total Billed</div>
                                    <div class="eob-summary-value amount">$${totalBilled.toFixed(2)}</div>
                                </div>
                                <div class="eob-summary-item">
                                    <div class="eob-summary-label">Insurance Covered</div>
                                    <div class="eob-summary-value amount">$${totalCovered.toFixed(2)}</div>
                                </div>
                                <div class="eob-summary-item">
                                    <div class="eob-summary-label">Patient Responsibility</div>
                                    <div class="eob-summary-value amount">$${totalPatientResponsibility.toFixed(2)}</div>
                                </div>
                                <div class="eob-summary-item">
                                    <div class="eob-summary-label">Copay Amount</div>
                                    <div class="eob-summary-value amount">$${totalCopay.toFixed(2)}</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Service Items Section -->
                    <div class="eob-section">
                        <div class="eob-section-header">
                            <span>🏥</span>
                            <span>Service Items</span>
                        </div>
                        <div class="eob-section-content">
                            <table class="eob-table">
                                <thead>
                                    <tr>
                                        <th>Service Description</th>
                                        <th>Start Date</th>
                                        <th>End Date</th>
                                        <th>Billed Amount</th>
                                        <th>Patient Responsibility</th>
                                        <th>Copay</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${eob.item && eob.item.length > 0 ? eob.item.map(item => {
                                        const { startDate, endDate } = formatServiceDates(item);
                                        // Calculate billed amount for service items table
                                        let billedAmount = 0;
                                        
                                        if (item.adjudication && item.adjudication.length > 0) {
                                            const submittedAdj = item.adjudication.find(adj => {
                                                const category = getTextFromFHIR(adj.category);
                                                return category.toLowerCase().includes('submitted') || category.toLowerCase().includes('billed');
                                            });
                                            if (submittedAdj) {
                                                billedAmount = parseFloat(submittedAdj.amount?.value || submittedAdj.amount || 0) || 0;
                                            }
                                        }
                                        
                                        // Fallback to other fields if no submitted adjudication found
                                        if (billedAmount === 0) {
                                            billedAmount = parseFloat(item.net || item.unitPrice?.value || item.factor || 0) || 0;
                                        }
                                        const patientResponsibility = item.adjudication ? item.adjudication.reduce((sum, adj) => {
                                            const categoryText = getTextFromFHIR(adj.category);
                                            if (categoryText.toLowerCase().includes('patient') || 
                                                categoryText.toLowerCase().includes('responsibility') ||
                                                categoryText.toLowerCase().includes('deductible')) {
                                                return sum + (parseFloat(adj.amount?.value || adj.amount || 0) || 0);
                                            }
                                            return sum;
                                        }, 0) : 0;
                                        const copayAmount = item.adjudication ? item.adjudication.reduce((sum, adj) => {
                                            const categoryText = getTextFromFHIR(adj.category);
                                            if (categoryText.toLowerCase().includes('copay')) {
                                                return sum + (parseFloat(adj.amount?.value || adj.amount || 0) || 0);
                                            }
                                            return sum;
                                        }, 0) : 0;
                                        
                                        return `
                                            <tr>
                                                <td>${getTextFromFHIR(item.productOrService)}</td>
                                                <td>${startDate}</td>
                                                <td>${endDate}</td>
                                                <td class="amount-cell">$${billedAmount.toFixed(2)}</td>
                                                <td class="amount-cell">$${patientResponsibility.toFixed(2)}</td>
                                                <td class="amount-cell">$${copayAmount.toFixed(2)}</td>
                                            </tr>
                                        `;
                                    }).join('') : '<tr><td colspan="6">No service items found</td></tr>'}
                                </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <!-- Payment Section -->
                    <div class="payment-section">
                        <div class="payment-header">
                            <span>💳</span>
                            <h3>Payment Options</h3>
                        </div>
                        <div class="payment-summary">
                            <div class="payment-item">
                                <div class="payment-label">Copay Due</div>
                                <div class="payment-amount">$${totalCopay.toFixed(2)}</div>
                            </div>
                            <div class="payment-item">
                                <div class="payment-label">Patient Responsibility</div>
                                <div class="payment-amount">$${totalPatientResponsibility.toFixed(2)}</div>
                            </div>
                            <div class="payment-item">
                                <div class="payment-label">Total Due</div>
                                <div class="payment-amount">$${(totalCopay + totalPatientResponsibility).toFixed(2)}</div>
                            </div>
                        </div>
                        <div class="payment-actions">
                            <button class="payment-btn btn-primary" onclick="processPayment('copay', ${totalCopay})">
                                <span>💳</span>
                                <span>Pay Copay Only</span>
                            </button>
                            <button class="payment-btn btn-primary" onclick="processPayment('full', ${totalPatientResponsibility + totalCopay})">
                                <span>💰</span>
                                <span>Pay Full Amount</span>
                            </button>
                            <button class="payment-btn btn-secondary" onclick="schedulePayment()">
                                <span>📅</span>
                                <span>Schedule Payment</span>
                            </button>
                            <button class="payment-btn btn-secondary" onclick="downloadEOB()">
                                <span>📄</span>
                                <span>Download EOB</span>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            detailsDiv.innerHTML = html;
            } catch (error) {
                console.error('Error displaying EOB details:', error);
                detailsDiv.innerHTML = `
                    <div style="background: #f8d7da; color: #721c24; padding: 20px; border-radius: 8px; margin: 20px 0;">
                        <h3>Error loading EOB details</h3>
                        <p>${error.message}</p>
                        <p>Please try refreshing the page or contact support if the issue persists.</p>
                    </div>
                `;
            }
        }

        function formatServiceDates(item) {
            let startDate = 'N/A';
            let endDate = 'N/A';
            
            if (item.servicedPeriodStart) {
                startDate = item.servicedPeriodStart;
            } else if (item.servicedPeriod?.start) {
                startDate = item.servicedPeriod.start;
            } else if (item.servicedDate) {
                startDate = item.servicedDate;
            }
            
            if (item.servicedPeriodEnd) {
                endDate = item.servicedPeriodEnd;
            } else if (item.servicedPeriod?.end) {
                endDate = item.servicedPeriod.end;
            } else if (item.servicedDate) {
                endDate = item.servicedDate;
            }
            
            return { startDate, endDate };
        }

        // Payment Processing Functions
        function processPayment(type, amount) {
            const paymentType = type === 'copay' ? 'Copay' : 'Full Amount';
            const confirmMessage = `Are you sure you want to process a payment of $${amount.toFixed(2)} for ${paymentType}?`;
            
            if (confirm(confirmMessage)) {
                // Show loading state
                const button = event.target.closest('.payment-btn');
                const originalText = button.innerHTML;
                button.innerHTML = '<span>⏳</span><span>Processing...</span>';
                button.disabled = true;
                
                // Simulate payment processing (replace with actual payment gateway integration)
                setTimeout(() => {
                    alert(`Payment of $${amount.toFixed(2)} processed successfully!`);
                    button.innerHTML = originalText;
                    button.disabled = false;
                    
                    // Close modal after successful payment
                    closeModal();
                }, 2000);
            }
        }
        
        function schedulePayment() {
            const amount = prompt('Enter the amount to schedule for payment:');
            if (amount && !isNaN(amount)) {
                const date = prompt('Enter payment date (YYYY-MM-DD):');
                if (date) {
                    alert(`Payment of $${amount} scheduled for ${date}`);
                }
            }
        }
        
        function downloadEOB() {
            // Simulate EOB download (replace with actual PDF generation)
            alert('EOB download started...');
            
            // Create a simple text file for demo purposes
            const eobContent = `Explanation of Benefits\nClaim ID: ${currentEOB?.id || 'N/A'}\nGenerated: ${new Date().toLocaleDateString()}`;
            const blob = new Blob([eobContent], { type: 'text/plain' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `EOB_${currentEOB?.id || 'unknown'}.txt`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        }
        
        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('eobModal');
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        }
    </script>

    <!-- Enhanced Modal Styles -->
    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.6);
            backdrop-filter: blur(5px);
            animation: fadeIn 0.3s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .modal-content {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 2% auto;
            padding: 0;
            border: none;
            width: 90%;
            max-width: 1000px;
            border-radius: 16px;
            max-height: 90vh;
            overflow: hidden;
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from { transform: translateY(-50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .modal-header {
            background: rgba(255,255,255,0.1);
            padding: 20px 30px;
            border-bottom: 1px solid rgba(255,255,255,0.2);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            color: white;
            font-size: 1.5rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .modal-title .icon {
            font-size: 1.8rem;
        }

        .close {
            color: white;
            font-size: 32px;
            font-weight: 300;
            cursor: pointer;
            background: rgba(255,255,255,0.1);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .close:hover {
            background: rgba(255,255,255,0.2);
            transform: rotate(90deg);
        }

        .modal-body {
            background: white;
            padding: 30px;
            max-height: calc(90vh - 100px);
            overflow-y: auto;
        }

        .eob-summary {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            border-left: 5px solid #667eea;
        }

        .eob-summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
        }

        .eob-summary-item {
            text-align: center;
        }

        .eob-summary-label {
            font-size: 0.85rem;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 5px;
        }

        .eob-summary-value {
            font-size: 1.2rem;
            font-weight: 600;
            color: #333;
        }

        .eob-summary-value.amount {
            color: #667eea;
            font-size: 1.4rem;
        }

        .eob-sections {
            display: grid;
            gap: 25px;
        }

        .eob-section {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .eob-section-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 20px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .eob-section-content {
            padding: 20px;
        }

        .eob-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }

        .eob-table th {
            background: #f8f9fa;
            padding: 12px;
            text-align: left;
            font-weight: 600;
            color: #495057;
            border-bottom: 2px solid #dee2e6;
        }

        .eob-table td {
            padding: 12px;
            border-bottom: 1px solid #e9ecef;
            vertical-align: top;
        }

        .eob-table tr:hover {
            background: #f8f9fa;
        }

        .amount-cell {
            font-weight: 600;
            color: #667eea;
        }

        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            text-transform: uppercase;
        }

        .status-active {
            background: #d4edda;
            color: #155724;
        }

        .status-cancelled {
            background: #f8d7da;
            color: #721c24;
        }

        /* Payment Section */
        .payment-section {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            border-radius: 12px;
            padding: 25px;
            margin-top: 30px;
            color: white;
        }

        .payment-header {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
        }

        .payment-header h3 {
            margin: 0;
            font-size: 1.3rem;
        }

        .payment-summary {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }

        .payment-item {
            text-align: center;
            background: rgba(255,255,255,0.1);
            padding: 15px;
            border-radius: 8px;
        }

        .payment-label {
            font-size: 0.85rem;
            opacity: 0.9;
            margin-bottom: 5px;
        }

        .payment-amount {
            font-size: 1.4rem;
            font-weight: 600;
        }

        .payment-actions {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .payment-btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 0.95rem;
        }

        .btn-primary {
            background: white;
            color: #28a745;
        }

        .btn-primary:hover {
            background: #f8f9fa;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        }

        .btn-secondary {
            background: rgba(255,255,255,0.2);
            color: white;
            border: 1px solid rgba(255,255,255,0.3);
        }

        .btn-secondary:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-2px);
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .btn-danger:hover {
            background: #c82333;
            transform: translateY(-2px);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .modal-content {
                width: 95%;
                margin: 5% auto;
            }
            
            .modal-body {
                padding: 20px;
            }
            
            .eob-summary-grid {
                grid-template-columns: 1fr;
            }
            
            .payment-actions {
                flex-direction: column;
            }
            
            .payment-btn {
                width: 100%;
                justify-content: center;
            }
        }

        /* EOB Detail Card Styles */
        .eob-detail-card {
            background: #f8f9fa;
            border: 1px solid #e1e8ed;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .eob-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #e1e8ed;
        }

        .eob-basic-info h3 {
            margin-bottom: 0.5rem;
            font-size: 1.1rem;
            color: #2c3e50;
        }

        .eob-status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .eob-actions {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        .submit-copay-btn {
            background: #667eea;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .submit-copay-btn:hover {
            background: #5a6fd8;
            transform: translateY(-1px);
        }

        .submit-copay-btn:disabled {
            background: #95a5a6;
            cursor: not-allowed;
            transform: none;
        }

        .submission-status {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-left: 1rem;
            font-size: 0.8rem;
            color: #555;
        }

        .status-indicator {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: #4CAF50;
            animation: pulse 2s infinite;
        }

        .status-indicator.error {
            background-color: #f44336;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        .eob-summary {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #e1e8ed;
        }

        .eob-summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 0.75rem;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem;
            background: white;
            border-radius: 6px;
            border: 1px solid #e1e8ed;
        }

        .summary-label {
            font-size: 0.8rem;
            color: #7f8c8d;
            font-weight: 600;
        }

        .summary-value {
            font-size: 1rem;
            font-weight: 500;
            color: #2c3e50;
        }

        .eob-line-items {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #e1e8ed;
        }

        .eob-line-items h4 {
            margin-bottom: 0.75rem;
            font-size: 1rem;
            color: #34495e;
        }

        .line-items-loading {
            text-align: center;
            padding: 1rem;
            color: #7f8c8d;
        }

        .eob-toggle {
            margin-top: 1rem;
            text-align: center;
        }

        .toggle-details-btn {
            background: #e1e8ed;
            color: #34495e;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .toggle-details-btn:hover {
            background: #d1d8dc;
            transform: translateY(-1px);
        }

        .toggle-text {
            font-weight: 600;
        }

        .toggle-icon {
            font-size: 0.8rem;
            transition: transform 0.3s ease;
        }

        .toggle-icon.open {
            transform: rotate(180deg);
        }

        /* Enhanced table styling for line items */
        .eob-line-items .data-table {
            margin-top: 1rem;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .eob-line-items .data-table th {
            background: #667eea;
            color: white;
            font-weight: 600;
            padding: 1rem 0.75rem;
        }

        .eob-line-items .data-table td {
            padding: 0.75rem;
            border-bottom: 1px solid #e1e8ed;
        }

        .eob-line-items .data-table tr:hover {
            background: #f8f9fa;
        }

        .eob-count {
            color: #6c757d;
            font-size: 0.9rem;
            margin-bottom: 1rem;
            font-style: italic;
        }
    </style>
</body>
</html>
